"use strict";angular.module("angular-leap",[]),angular.module("angular-leap").value("leapConfig",{defaultTimeout:650,defaultGestureIntense:.5}),angular.module("angular-leap").service("leap",["$window",function(e){if(!e.Leap)throw Error("You should include LeapJS Native JavaScript API");var a,r=function(){return a||(a=new e.Leap.Controller({enableGestures:!0}),a.connect()),a};return{controller:r}}]),angular.forEach(["leapKeyTap","leapScreenTap","leapCircle","leapSwipeLeft","leapSwipeRight","leapSwipeUp","leapSwipeDown"],function(e){var a=e.replace(/([A-Z])/g," $1").split(" "),r=a[1].toLowerCase(),t=a[2];"Tap"===a[2]&&(r+=a[2]),angular.module("angular-leap").directive(e,["$parse","leap","leapHelperService","leapConfig",function(a,n,l,u){return function(i,o,p){var c=a(p[e]),f=p.leapTimeout?p.leapTimeout:u.defaultTimeout;n.controller().on("gesture",function(e){if(e.type===r){if("swipe"===r&&!l.testForDirection(e,t))return;l.timeout(f)||i.$apply(function(){c(i,{$gesture:e})})}})}}])}),angular.module("angular-leap").factory("leapHelperService",["$timeout","leapConfig",function(e,a){var r=!1,t=function(e,r){var t=e.direction[0],n=e.direction[1],l=a.defaultGestureIntense,u={Left:t>l,Right:-t>l,Up:n>l,Down:-n>l};return u[r]},n=function(a){var t=r;return!r&&a&&(r=!0,e(function(){r=!1},a)),t};return{testForDirection:t,timeout:n}}]);